# Application name
spring.application.name=springcloud-apigw
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

logging.level.root=INFO
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=INFO
logging.level.org.springframework.cloud.gateway=TRACE


spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true


#Route for products-service
spring.cloud.gateway.routes[0].id=products-service
spring.cloud.gateway.routes[0].uri=lb://products-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/product
#Eg. invocation endpoint : curl -i -X GET http://localhost:8080/api/product

#Route for order-service
spring.cloud.gateway.routes[1].id=order-service
spring.cloud.gateway.routes[1].uri=lb://orders-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/order

#Route for discovery-service
spring.cloud.gateway.routes[2].id=discovery-service
spring.cloud.gateway.routes[2].uri=http://localhost:8761
spring.cloud.gateway.routes[2].predicates[0]=Path=/eureka/web
spring.cloud.gateway.routes[2].filters[0]=SetPath=/

#the last filter is meant for routing the incoming call on api-gw for eureka server.
##if the call comes on apigw fir /eureka/web, it gets routed to http://localhost:8761
#Below settings will ensure all the static content is also brought subsequently and page is not broken.


#Route for discovery-service-static-content (Eg. css / js)
spring.cloud.gateway.routes[3].id=discovery-service-static
spring.cloud.gateway.routes[3].uri=http://localhost:8761
spring.cloud.gateway.routes[3].predicates[0]=Path=/eureka/**
